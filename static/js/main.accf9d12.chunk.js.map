{"version":3,"sources":["components/Phonebook.module.css","components/ContactForm/ContactForm .js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","nanoid","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","reset","className","styles","form","onSubmit","this","htmlFor","label","input","type","pattern","title","required","onChange","id","button","Component","Filter","filterValue","onChangeFilter","filterInputId","FilterThumb","ContactItem","onDeleteContact","contactsItem","contactsName","contactsNumber","contactsButton","onClick","ContactList","contacts","contactsList","map","App","dataContacts","filter","addContact","contact","checkContacts","find","toLowerCase","checkContactsNumber","onError","changeFilter","getFilteredContacts","normalizedFilter","includes","deleteContact","contactId","message","alert","localStorage","getItem","parsedContacts","JSON","parse","length","console","log","prevProps","prevState","setItem","stringify","filteredContacts","container","React","propTypes","PropTypes","array","string","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.accf9d12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__8DxCK\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  nameInputId = nanoid();\r\n  numberInputId = nanoid();\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId} className={styles.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n          value={this.state.name}\r\n        />\r\n        <label htmlFor={this.numberInputId} className={styles.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.numberInputId}\r\n          value={this.state.number}\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, onChangeFilter }) => {\r\n  const filterInputId = nanoid();\r\n  return (\r\n    <div className={styles.FilterThumb}>\r\n      <label htmlFor={filterInputId} className={styles.label}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        required\r\n        onChange={onChangeFilter}\r\n        id={filterInputId}\r\n        value={filterValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactItem = (props) => {\r\n  const { id, name, number, onDeleteContact } = props;\r\n  return (\r\n    <li className={styles.contactsItem} id={id}>\r\n      <p className={styles.contactsName}>{name}:</p>\r\n      <p className={styles.contactsNumber}>{number}</p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={onDeleteContact}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"./ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport ContactForm from \"./ContactForm/ContactForm \";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport { nanoid } from \"nanoid\";\r\nimport dataContacts from \"../data/contacts.json\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: dataContacts,\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const checkContacts = this.state.contacts.find(\r\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\r\n    );\r\n\r\n    const checkContactsNumber = this.state.contacts.find(\r\n      (contact) => number.toLowerCase() === contact.number.toLowerCase()\r\n    );\r\n\r\n    if (checkContacts) {\r\n      return this.onError(`${checkContacts.name}`);\r\n    }\r\n\r\n    if (checkContactsNumber) {\r\n      return this.onError(`${checkContactsNumber.number}`);\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (event) => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  onError = (checkContacts) => {\r\n    const message = `${checkContacts} is already in contacts`;\r\n    alert(message);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts.length > 0) {\r\n      console.log(parsedContacts, \"parsedContacts\");\r\n      this.setState({ contacts: parsedContacts });\r\n    } else {\r\n      console.log(\"phonebook was empty, returned base contacts\");\r\n      this.setState({ contacts: dataContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onFormSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          filterValue={this.state.filter}\r\n          onChangeFilter={this.changeFilter}\r\n        />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default App;\r\n","import \"modern-normalize/modern-normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3yNzF\",\"contactsItem\":\"ContactList_contactsItem__3y9m3\",\"contactsName\":\"ContactList_contactsName__35d4p\",\"contactsNumber\":\"ContactList_contactsNumber__2svwg\",\"contactsButton\":\"ContactList_contactsButton__2Y7zI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3c2uU\",\"label\":\"ContactForm_label__2WvbH\",\"input\":\"ContactForm_input__2nkT-\",\"button\":\"ContactForm_button__1buib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterThumb\":\"Filter_FilterThumb__7UImZ\",\"label\":\"Filter_label__2CGQ3\",\"input\":\"Filter_input__dJK7D\"};"],"sourceRoot":""}